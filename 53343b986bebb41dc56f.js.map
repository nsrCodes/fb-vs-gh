{"version":3,"file":"53343b986bebb41dc56f.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/python/python.js"],"sourcesContent":["import _createForOfIteratorHelper from \"/Users/sahilgupta/Documents/dev/requestly/requestly-master/app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.1(547870b6881302c5b4ff32173c16d06009e3588f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __reExport = function __reExport(target, mod, secondTarget) {\n  return __copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\");\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/python/python.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"'''\", \"'''\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async|match|case).*?:\\\\s*$\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    offSide: true,\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".python\",\n  keywords: [\"False\", \"None\", \"True\", \"_\", \"and\", \"as\", \"assert\", \"async\", \"await\", \"break\", \"case\", \"class\", \"continue\", \"def\", \"del\", \"elif\", \"else\", \"except\", \"exec\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"in\", \"is\", \"lambda\", \"match\", \"nonlocal\", \"not\", \"or\", \"pass\", \"print\", \"raise\", \"return\", \"try\", \"while\", \"with\", \"yield\", \"int\", \"float\", \"long\", \"complex\", \"hex\", \"abs\", \"all\", \"any\", \"apply\", \"basestring\", \"bin\", \"bool\", \"buffer\", \"bytearray\", \"callable\", \"chr\", \"classmethod\", \"cmp\", \"coerce\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"execfile\", \"file\", \"filter\", \"format\", \"frozenset\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"id\", \"input\", \"intern\", \"isinstance\", \"issubclass\", \"iter\", \"len\", \"locals\", \"list\", \"map\", \"max\", \"memoryview\", \"min\", \"next\", \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"print\", \"property\", \"reversed\", \"range\", \"raw_input\", \"reduce\", \"reload\", \"repr\", \"reversed\", \"round\", \"self\", \"set\", \"setattr\", \"slice\", \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\", \"type\", \"unichr\", \"unicode\", \"vars\", \"xrange\", \"zip\", \"__dict__\", \"__methods__\", \"__members__\", \"__class__\", \"__bases__\", \"__name__\", \"__mro__\", \"__subclasses__\", \"__init__\", \"__import__\"],\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, [/[,:;]/, \"delimiter\"], [/[{}\\[\\]()]/, \"@brackets\"], [/@[a-zA-Z_]\\w*/, \"tag\"], [/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"identifier\"\n      }\n    }]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#.*$)/, \"comment\"], [/'''/, \"string\", \"@endDocString\"], [/\"\"\"/, \"string\", \"@endDblDocString\"]],\n    endDocString: [[/[^']+/, \"string\"], [/\\\\'/, \"string\"], [/'''/, \"string\", \"@popall\"], [/'/, \"string\"]],\n    endDblDocString: [[/[^\"]+/, \"string\"], [/\\\\\"/, \"string\"], [/\"\"\"/, \"string\", \"@popall\"], [/\"/, \"string\"]],\n    numbers: [[/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, \"number.hex\"], [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, \"number\"]],\n    strings: [[/'$/, \"string.escape\", \"@popall\"], [/'/, \"string.escape\", \"@stringBody\"], [/\"$/, \"string.escape\", \"@popall\"], [/\"/, \"string.escape\", \"@dblStringBody\"]],\n    stringBody: [[/[^\\\\']+$/, \"string\", \"@popall\"], [/[^\\\\']+/, \"string\"], [/\\\\./, \"string\"], [/'/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]],\n    dblStringBody: [[/[^\\\\\"]+$/, \"string\", \"@popall\"], [/[^\\\\\"]+/, \"string\"], [/\\\\./, \"string\"], [/\"/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]]\n  }\n};\nexport { conf, language };"],"names":["mod","secondTarget","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_step","_iterator","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","monaco_editor_core_exports","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","onEnterRules","beforeText","RegExp","action","indentAction","languages","IndentAction","Indent","folding","offSide","markers","start","end","language","defaultToken","tokenPostfix","keywords","token","tokenizer","root","include","cases","whitespace","endDocString","endDblDocString","numbers","strings","stringBody","dblStringBody"],"sourceRoot":""}