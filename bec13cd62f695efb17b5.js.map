{"version":3,"file":"bec13cd62f695efb17b5.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.1(547870b6881302c5b4ff32173c16d06009e3588f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/cypher/cypher.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".cypher\",\n  ignoreCase: true,\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\"ALL\", \"AND\", \"AS\", \"ASC\", \"ASCENDING\", \"BY\", \"CALL\", \"CASE\", \"CONTAINS\", \"CREATE\", \"DELETE\", \"DESC\", \"DESCENDING\", \"DETACH\", \"DISTINCT\", \"ELSE\", \"END\", \"ENDS\", \"EXISTS\", \"IN\", \"IS\", \"LIMIT\", \"MANDATORY\", \"MATCH\", \"MERGE\", \"NOT\", \"ON\", \"ON\", \"OPTIONAL\", \"OR\", \"ORDER\", \"REMOVE\", \"RETURN\", \"SET\", \"SKIP\", \"STARTS\", \"THEN\", \"UNION\", \"UNWIND\", \"WHEN\", \"WHERE\", \"WITH\", \"XOR\", \"YIELD\"],\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\n  builtinFunctions: [\"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endNode\", \"exists\", \"exp\", \"floor\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lTrim\", \"max\", \"min\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"properties\", \"radians\", \"rand\", \"range\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rTrim\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startNode\", \"stDev\", \"stDevP\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toBoolean\", \"toFloat\", \"toInteger\", \"toLower\", \"toString\", \"toUpper\", \"trim\", \"type\"],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"%\", \"^\", \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"->\", \"<-\", \"-->\", \"<--\"],\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+/,\n  octaldigits: /[0-7]+/,\n  hexdigits: /[0-9a-fA-F]+/,\n  tokenizer: {\n    root: [[/[{}[\\]()]/, \"@brackets\"], {\n      include: \"common\"\n    }],\n    common: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, [/:[a-zA-Z_][\\w]*/, \"type.identifier\"], [/[a-zA-Z_][\\w]*(?=\\()/, {\n      cases: {\n        \"@builtinFunctions\": \"predefined.function\"\n      }\n    }], [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtinLiterals\": \"predefined.literal\",\n        \"@default\": \"identifier\"\n      }\n    }], [/`/, \"identifier.escape\", \"@identifierBacktick\"], [/[;,.:|]/, \"delimiter\"], [/[<>=%+\\-*/^]+/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }]],\n    numbers: [[/-?(@digits)[eE](-?(@digits))?/, \"number.float\"], [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"], [/-?0x(@hexdigits)/, \"number.hex\"], [/-?0(@octaldigits)/, \"number.octal\"], [/-?(@digits)/, \"number\"]],\n    strings: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@stringDouble\"], [/'/, \"string\", \"@stringSingle\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/\\/\\/.*/, \"comment\"], [/[^/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[/*]/, \"comment\"]],\n    stringDouble: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    stringSingle: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/'/, \"string\", \"@pop\"]],\n    identifierBacktick: [[/[^\\\\`]+/, \"identifier.escape\"], [/@escapes/, \"identifier.escape\"], [/\\\\./, \"identifier.escape.invalid\"], [/`/, \"identifier.escape\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","builtinLiterals","builtinFunctions","operators","escapes","digits","octaldigits","hexdigits","tokenizer","root","include","common","cases","numbers","strings","whitespace","comment","stringDouble","stringSingle","identifierBacktick"],"sourceRoot":""}